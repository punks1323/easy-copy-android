// Generated by Dagger (https://dagger.dev).
package com.easycopy.core.di.module;

import android.content.Context;
import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvidesSharedPreferenceFactory implements Factory<SharedPreferences> {
  private final ApplicationModule module;

  private final Provider<Context> contextProvider;

  private final Provider<String> prefFileNameProvider;

  public ApplicationModule_ProvidesSharedPreferenceFactory(ApplicationModule module,
      Provider<Context> contextProvider, Provider<String> prefFileNameProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.prefFileNameProvider = prefFileNameProvider;
  }

  @Override
  public SharedPreferences get() {
    return providesSharedPreference(module, contextProvider.get(), prefFileNameProvider.get());
  }

  public static ApplicationModule_ProvidesSharedPreferenceFactory create(ApplicationModule module,
      Provider<Context> contextProvider, Provider<String> prefFileNameProvider) {
    return new ApplicationModule_ProvidesSharedPreferenceFactory(module, contextProvider, prefFileNameProvider);
  }

  public static SharedPreferences providesSharedPreference(ApplicationModule instance,
      Context context, String prefFileName) {
    return Preconditions.checkNotNull(instance.providesSharedPreference(context, prefFileName), "Cannot return null from a non-@Nullable @Provides method");
  }
}
