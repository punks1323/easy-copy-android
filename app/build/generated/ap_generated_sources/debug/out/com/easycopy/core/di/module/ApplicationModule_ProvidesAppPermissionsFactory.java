// Generated by Dagger (https://dagger.dev).
package com.easycopy.core.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.Set;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvidesAppPermissionsFactory implements Factory<Set<String>> {
  private final ApplicationModule module;

  public ApplicationModule_ProvidesAppPermissionsFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public Set<String> get() {
    return providesAppPermissions(module);
  }

  public static ApplicationModule_ProvidesAppPermissionsFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvidesAppPermissionsFactory(module);
  }

  public static Set<String> providesAppPermissions(ApplicationModule instance) {
    return Preconditions.checkNotNull(instance.providesAppPermissions(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
