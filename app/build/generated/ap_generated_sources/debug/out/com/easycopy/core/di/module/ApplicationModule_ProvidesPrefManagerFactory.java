// Generated by Dagger (https://dagger.dev).
package com.easycopy.core.di.module;

import android.content.SharedPreferences;
import com.easycopy.data.local.pref.PrefManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvidesPrefManagerFactory implements Factory<PrefManager> {
  private final ApplicationModule module;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public ApplicationModule_ProvidesPrefManagerFactory(ApplicationModule module,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public PrefManager get() {
    return providesPrefManager(module, sharedPreferencesProvider.get());
  }

  public static ApplicationModule_ProvidesPrefManagerFactory create(ApplicationModule module,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new ApplicationModule_ProvidesPrefManagerFactory(module, sharedPreferencesProvider);
  }

  public static PrefManager providesPrefManager(ApplicationModule instance,
      SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNull(instance.providesPrefManager(sharedPreferences), "Cannot return null from a non-@Nullable @Provides method");
  }
}
